{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SACpC,IACIC,EACAC,EACAC,EAHAC,EAAW,GAKfN,EAAKO,iBAAiB,SAGtB,SAAsBC,GACpBF,EAASE,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAG3CR,EAAQS,OAAON,EAASO,OACxBT,EAAOQ,OAAON,EAASQ,MACvBT,EAASO,OAAON,EAASS,O,IAR3Bf,EAAKO,iBAAiB,UAWtB,SAAuBC,GACrBA,EAAMQ,iBACN,IAAIC,EAAYd,EAAQC,EAExB,IAAK,IAAIc,EAAQ,EAAGA,GAASb,EAAQa,GAAS,EAAG,CAC/C,MAAMC,EAAWD,EAKjBE,EAAcD,EAAUF,GACrBI,MAAK,KACJC,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBL,QAAiBF,OAExCQ,QAAQC,IAAIT,EAAU,IAGvBU,OAAM,KACLL,EAAAxB,GAASyB,OAAOK,QACd,sBAAoBT,QAAiBF,OAEvCQ,QAAQC,IAAIT,EAAU,IAG1BA,GAAab,EAEbqB,QAAQC,IAAIT,E,KAIhB,MAAMG,EAAgB,CAACD,EAAUF,IACxB,IAAIY,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,IAEAC,GAAQ,GAETd,EAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet formData = {};\nlet delay;\nlet step;\nlet amount;\n\nform.addEventListener('input', onInputClick);\nform.addEventListener('submit', onSubmitClick);\n\nfunction onInputClick(event) {\n  formData[event.target.name] = event.target.value;\n  // console.log(event.target.value);\n\n  delay = Number(formData.delay);\n  step = Number(formData.step);\n  amount = Number(formData.amount);\n}\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n  let nextDelay = delay - step;\n\n  for (let index = 1; index <= amount; index += 1) {\n    const position = index;\n    nextDelay;\n\n    // console.log(nextDelay);\n\n    createPromise(position, nextDelay)\n      .then(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${nextDelay}ms`\n        );\n        console.log(nextDelay);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${nextDelay}ms`\n        );\n        console.log(nextDelay);\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    nextDelay += step;\n\n    console.log(nextDelay);\n  }\n}\n\nconst createPromise = (position, nextDelay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve();\n      } else {\n        reject();\n      }\n    }, nextDelay);\n    // console.log(nextDelay);\n  });\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$formData","addEventListener","event","target","name","value","Number","delay","step","amount","preventDefault","nextDelay","index","position","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","console","log","catch","failure","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.70eb1318.js.map"}