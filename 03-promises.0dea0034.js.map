{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SACpC,IACIC,EACAC,EACAC,EAHAC,EAAW,GAKfN,EAAKO,iBAAiB,SAGtB,SAAsBC,GACpBF,EAASE,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAG3CR,EAAQS,OAAON,EAASO,OACxBT,EAAOQ,OAAON,EAASQ,MACvBT,EAASO,OAAON,EAASS,O,IAR3Bf,EAAKO,iBAAiB,UAWtB,SAAuBC,GACrBA,EAAMQ,iBACN,IAAIC,EAAYd,EAAQC,EAExB,IAAK,IAAIc,EAAQ,EAAGA,GAASb,EAAQa,GAAS,EAAG,CAC/C,MAAMC,EAAWD,EAEjBE,QAAQC,IAAIJ,GAEZK,EAAc,EAAG,MACdC,MAAK,KACJC,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBP,QAAiBF,OAExCG,QAAQC,IAAIJ,EAAU,IAGvBU,OAAM,KACLH,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBT,QAAiBF,OAEvCG,QAAQC,IAAIJ,EAAU,IAI1BA,GAAab,C,KAIjB,MAAMkB,EAAgB,CAACH,EAAUF,IACxB,IAAIY,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQX,EAAUF,GAElBc,EAAOZ,EAAUF,EAAU,GAE5BA,EAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet formData = {};\nlet delay;\nlet step;\nlet amount;\n\nform.addEventListener('input', onInputClick);\nform.addEventListener('submit', onSubmitClick);\n\nfunction onInputClick(event) {\n  formData[event.target.name] = event.target.value;\n  // console.log(event.target.value);\n\n  delay = Number(formData.delay);\n  step = Number(formData.step);\n  amount = Number(formData.amount);\n}\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n  let nextDelay = delay - step;\n\n  for (let index = 1; index <= amount; index += 1) {\n    const position = index;\n\n    console.log(nextDelay);\n\n    createPromise(2, 1500)\n      .then(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${nextDelay}ms`\n        );\n        console.log(nextDelay);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${nextDelay}ms`\n        );\n        console.log(nextDelay);\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    nextDelay += step;\n  }\n}\n\nconst createPromise = (position, nextDelay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(position, nextDelay);\n      } else {\n        reject(position, nextDelay);\n      }\n    }, nextDelay);\n    // console.log(nextDelay);\n  });\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$formData","addEventListener","event","target","name","value","Number","delay","step","amount","preventDefault","nextDelay","index","position","console","log","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.0dea0034.js.map"}