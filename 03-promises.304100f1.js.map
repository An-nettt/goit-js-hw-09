{"mappings":"iiBAAA,IAIIA,EAJJC,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAChCC,EAAW,GAGfH,EAAKI,iBAAiB,SAGtB,SAAsBC,GACpBF,EAASE,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAG3CX,EAAQY,OAAON,EAASO,OACxBC,KAAOF,OAAON,EAASQ,MACvBC,OAASH,OAAON,EAASS,O,IAR3BZ,EAAKI,iBAAiB,UAWtB,SAAuBC,G,kBAKnB,IAAMQ,EAAWC,EAKjBC,EAAcF,EAAUG,GACrBC,MAAK,WACJC,EAAApB,GAASqB,OAAOC,QACd,uBAAwCC,OAAfR,EAAS,QAAgBQ,OAAVL,EAAU,OAEpDM,QAAQC,IAAIP,E,IAGbQ,OAAM,WACLN,EAAApB,GAASqB,OAAOM,QACd,sBAAuCJ,OAAfR,EAAS,QAAgBQ,OAAVL,EAAU,OAEnDM,QAAQC,IAAIP,E,IAGhBA,GAAaL,KAEbW,QAAQC,IAAIP,E,EA1BdX,EAAMqB,iBAGN,IAFA,IAAIV,EAAYnB,EAAQc,KAEfgB,EAAQ,EAAGA,GAASf,OAAQe,GAAS,EAACC,EAAAD,E,IA2BjD,IAAMZ,EAAgB,SAACF,EAAUG,GAC/B,OAAO,IAAIa,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,IAEAC,G,GAEDf,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet formData = {};\nlet delay;\n\nform.addEventListener('input', onInputClick);\nform.addEventListener('submit', onSubmitClick);\n\nfunction onInputClick(event) {\n  formData[event.target.name] = event.target.value;\n  // console.log(event.target.value);\n\n  delay = Number(formData.delay);\n  step = Number(formData.step);\n  amount = Number(formData.amount);\n}\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n  let nextDelay = delay - step;\n\n  for (let index = 1; index <= amount; index += 1) {\n    const position = index;\n    nextDelay;\n\n    // console.log(nextDelay);\n\n    createPromise(position, nextDelay)\n      .then(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${nextDelay}ms`\n        );\n        console.log(nextDelay);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${nextDelay}ms`\n        );\n        console.log(nextDelay);\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    nextDelay += step;\n\n    console.log(nextDelay);\n  }\n}\n\nconst createPromise = (position, nextDelay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve();\n      } else {\n        reject();\n      }\n    }, nextDelay);\n    // console.log(nextDelay);\n  });\n};\n"],"names":["$ce04d3a99e08e73b$var$delay","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formData","addEventListener","event","target","name","value","Number","delay","step","amount","position","index","$ce04d3a99e08e73b$var$createPromise","nextDelay","then","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","preventDefault","index1","_loop","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.304100f1.js.map"}