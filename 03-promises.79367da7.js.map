{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SACpC,IAAIC,EAAW,GACXC,EAAQ,EACRC,EAAO,EACPC,EAAS,EAwCb,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQH,EAAUC,GAElBG,EAAOJ,EAAUC,EAAU,GAE5BL,EAAM,G,CA9CbJ,EAAKiB,iBAAiB,SAGtB,SAAsBC,GACpBf,EAASe,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAG3CjB,EAAQkB,OAAOnB,EAASoB,OACxBlB,EAAOiB,OAAOnB,EAASqB,MACvBlB,EAASgB,OAAOnB,EAASsB,O,IAR3BzB,EAAKiB,iBAAiB,UAWtB,SAAuBC,GACrBA,EAAMQ,iBACN,IAAIC,EAAYvB,EAEhB,IAAK,IAAIwB,EAAQ,EAAGA,GAAStB,EAAQsB,GAAS,EAAG,CAG/CrB,EAFiBqB,EAEOD,GACrBE,MAAK,CAACC,EAAUrB,KACfsB,EAAAjC,GAASkC,OAAOC,QACd,uBAAqBH,QAAiBrB,MAAc,IAIvDyB,OAAM,CAACC,EAAU1B,KAChBsB,EAAAjC,GAASkC,OAAOI,QACd,sBAAoBD,QAAiB1B,MAAc,IAIzDkB,GAAatB,EACbgC,QAAQC,IAAIX,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet formData = {};\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\nlet position = 0;\n\nform.addEventListener('input', onInputClick);\nform.addEventListener('submit', onSubmitClick);\n\nfunction onInputClick(event) {\n  formData[event.target.name] = event.target.value;\n  // console.log(event.target.value);\n\n  delay = Number(formData.delay);\n  step = Number(formData.step);\n  amount = Number(formData.amount);\n}\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n  let nextDelay = delay;\n\n  for (let index = 1; index <= amount; index += 1) {\n    const position = index;\n\n    createPromise(position, nextDelay)\n      .then((position, nextDelay) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${nextDelay}ms`\n        );\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch((position, nextDelay) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${nextDelay}ms`\n        );\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    nextDelay += step;\n    console.log(nextDelay);\n  }\n}\n\nfunction createPromise(position, nextDelay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(position, nextDelay);\n      } else {\n        reject(position, nextDelay);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$formData","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position4","nextDelay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","target","name","value","Number","delay","step","amount","preventDefault","nextDelay1","index","then","position2","$parcel$interopDefault","Notify","success","catch","position3","failure","console","log"],"version":3,"file":"03-promises.79367da7.js.map"}